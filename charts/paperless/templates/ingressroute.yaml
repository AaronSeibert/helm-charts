{{- if and .Values.ingressRoute.create .Values.service.enabled -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ printf "%s-route" (include "paperless.fullname" . ) }}
  labels:
    {{- include "paperless.labels" . | nindent 4 }}
    {{- with .Values.ingressRoute.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.ingressRoute.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.ingressRoute.entryPoints }}
  entryPoints:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  routes:
    - kind: Rule
      match: {{ required "Mandatory field \".ingressRoute.rule\" is empty!" .Values.ingressRoute.rule }}
      services:
        - kind: Service
          name: {{ include "paperless.fullname" . }}
          namespace: {{ .Release.Namespace }}
          port: {{ .Values.ports.http.port }}
      {{- with .Values.ingressRoute.middlewares }}
      middlewares:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- with (include "paperless.ingressRoute.tlsSecretName" .) }}
  tls:
    secretName: {{ . }}
  {{- end }}
{{- end }}
